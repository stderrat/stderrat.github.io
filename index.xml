<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>YAUB Yet Another Useless Blog on TechBlog about OpenShift/Ansible/Satellite and much more</title><link>https://blog.stderr.at/</link><description>Recent content in YAUB Yet Another Useless Blog on TechBlog about OpenShift/Ansible/Satellite and much more</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Toni Schmidbauer &amp; Thomas Jungbauer</copyright><atom:link href="https://blog.stderr.at/index.xml" rel="self" type="application/rss+xml"/><item><title>Compliance Operator</title><link>https://blog.stderr.at/compliance/2021/07/compliance-operator/</link><pubDate>Mon, 19 Jul 2021 00:00:00 +0000</pubDate><guid>https://blog.stderr.at/compliance/2021/07/compliance-operator/</guid><description>&lt;div class="paragraph">
&lt;p>OpenShift comes out of the box with a highly secure operating system, called Red Hat CoreOS. This OS is immutable, which means that no direct changes are done inside the OS, instead any configuration is managed by OpenShift itself using MachineConfig objects. Nevertheless, hardening certain settings must still be considered. Red Hat released a hardening guide (CIS Benchmark) which can be downloaded at &lt;a href="https://www.cisecurity.org/" class="bare">https://www.cisecurity.org/&lt;/a>.&lt;/p>
&lt;/div></description></item><item><title>Helpful oc / kubectl commands</title><link>https://blog.stderr.at/openshift/2020-04-01-oc-commands/</link><pubDate>Wed, 01 Apr 2020 00:00:00 +0000</pubDate><guid>https://blog.stderr.at/openshift/2020-04-01-oc-commands/</guid><description>&lt;div class="paragraph">
&lt;p>This is a list of useful oc and/or kubectl commands so they won’t be forgotton. No this is not a joke…​&lt;/p>
&lt;/div></description></item><item><title>Installation</title><link>https://blog.stderr.at/service-mesh/2020/03/installation/</link><pubDate>Sat, 28 Mar 2020 00:00:00 +0000</pubDate><guid>https://blog.stderr.at/service-mesh/2020/03/installation/</guid><description>&lt;div class="paragraph">
&lt;p>Everything has a start, this blog as well as the following tutorials. This series of tutorials shall provide a brief and working overview about &lt;strong>OpenShift Service Mesh&lt;/strong>. It is starting with the installation and the first steps, and will continue with advanced settings and configuration options.&lt;/p>
&lt;/div></description></item><item><title>oc compliance command line plugin</title><link>https://blog.stderr.at/compliance/2021/07/oc-compliance-command-line-plugin/</link><pubDate>Tue, 20 Jul 2021 00:00:00 +0000</pubDate><guid>https://blog.stderr.at/compliance/2021/07/oc-compliance-command-line-plugin/</guid><description>&lt;div class="paragraph">
&lt;p>As described at &lt;a href="https://blog.stderr.at/compliance/2021/07/compliance-operator/">Compliance Operator&lt;/a> the Compliance Operator can be used to scan the OpenShift cluster environment against security benchmark, like CIS.
Fetching the actual results might be a bit tricky tough.&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>With OpenShift 4.8 plugins to the &lt;code>oc&lt;/code> command are allowed. One of these plugin os &lt;code>oc compliance&lt;/code>, which allows you to easily fetch scan results, re-run scans and so on.
Let’s install and try it out.&lt;/p>
&lt;/div></description></item><item><title>Ansible - Azure Resource Manager Example</title><link>https://blog.stderr.at/ansible/2020/04/ansible-azure-resource-manager-example/</link><pubDate>Mon, 27 Apr 2020 00:00:00 +0000</pubDate><guid>https://blog.stderr.at/ansible/2020/04/ansible-azure-resource-manager-example/</guid><description>&lt;div class="paragraph">
&lt;p>Using Ansible Resource Manager with an ARM template and a simple Ansible playbook to deploy a Virtual Machine with Disk, virtual network, public IP and so on.&lt;/p>
&lt;/div></description></item><item><title>OpenShift Pipelines - Tekton Introduction</title><link>https://blog.stderr.at/openshift/2020-04-16-tekton/</link><pubDate>Thu, 16 Apr 2020 00:00:00 +0000</pubDate><guid>https://blog.stderr.at/openshift/2020-04-16-tekton/</guid><description>&lt;div class="paragraph">
&lt;p>&lt;em>OpenShift Pipelines is a cloud-native, continuous integration and delivery (CI/CD) solution for building pipelines using Tekton. Tekton is a flexible, Kubernetes-native, open-source CI/CD framework that enables automating deployments across multiple platforms (Kubernetes, serverless, VMs, etc) by abstracting away the underlying details.&lt;/em> [&lt;a href="#source_1">1&lt;/a>]&lt;/p>
&lt;/div></description></item><item><title>Red Hat Satellite Cheat Sheet</title><link>https://blog.stderr.at/general/2020/04/red-hat-satellite-cheat-sheet/</link><pubDate>Wed, 15 Apr 2020 00:00:00 +0000</pubDate><guid>https://blog.stderr.at/general/2020/04/red-hat-satellite-cheat-sheet/</guid><description>&lt;div class="paragraph">
&lt;p>Cheat sheet for various Red Hat Satellite tasks from a newbie to a newbie.&lt;/p>
&lt;/div></description></item><item><title>DO410 Ansible and Ansible Tower training notes</title><link>https://blog.stderr.at/ansible/2020/04/do410-ansible-and-ansible-tower-training-notes/</link><pubDate>Mon, 06 Apr 2020 00:00:00 +0000</pubDate><guid>https://blog.stderr.at/ansible/2020/04/do410-ansible-and-ansible-tower-training-notes/</guid><description>&lt;div class="paragraph">
&lt;p>Notes taken during Red Hat course D410 Ansible and Ansible Tower.&lt;/p>
&lt;/div></description></item><item><title>Deploy Microservices</title><link>https://blog.stderr.at/service-mesh/2020/03/deploy-microservices/</link><pubDate>Sun, 29 Mar 2020 00:00:00 +0000</pubDate><guid>https://blog.stderr.at/service-mesh/2020/03/deploy-microservices/</guid><description>&lt;div class="paragraph">
&lt;p>The second tutorials explains how to install an example application containing thee microservices. All operations have been successfully tested on OpenShift 4.3.&lt;/p>
&lt;/div></description></item><item><title>Red Hat Quay Registry - Overview and Installation</title><link>https://blog.stderr.at/openshift/2020-05-13-quay-tutorial1/</link><pubDate>Wed, 13 May 2020 00:00:00 +0000</pubDate><guid>https://blog.stderr.at/openshift/2020-05-13-quay-tutorial1/</guid><description>&lt;div class="paragraph">
&lt;p>Red Hat Quay is an enterprise-quality container registry, which is responsible to build, scan, store and deploy containers.
The main features of Quay include:&lt;/p>
&lt;/div>
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>High Availability&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Security Scanning (with Clair)&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Registry mirroring&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Docker v2&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Continuous integration&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div>
&lt;div class="paragraph">
&lt;p>and much more.&lt;/p>
&lt;/div></description></item><item><title>Basic usage of git</title><link>https://blog.stderr.at/general/2020/05/basic-usage-of-git/</link><pubDate>Fri, 08 May 2020 00:00:00 +0000</pubDate><guid>https://blog.stderr.at/general/2020/05/basic-usage-of-git/</guid><description>&lt;div class="paragraph">
&lt;p>This is a very short and hopefully simple introduction on how to use
&lt;a href="https://git-scm.com/">Git&lt;/a> when you would like to contribute to
projects hosted on &lt;a href="http://github.com">github.com&lt;/a>. The same workflow should also work for
projects on &lt;a href="http://gitlab.com">gitlab.com&lt;/a>.&lt;/p>
&lt;/div></description></item><item><title>Ingress Traffic</title><link>https://blog.stderr.at/service-mesh/2020/03/ingress-traffic/</link><pubDate>Mon, 30 Mar 2020 00:00:00 +0000</pubDate><guid>https://blog.stderr.at/service-mesh/2020/03/ingress-traffic/</guid><description>&lt;div class="paragraph">
&lt;p>Part 3 of tutorial series &lt;strong>OpenShift 4 and Service Mesh&lt;/strong> will show you how to create a Gateway and a VirtualService, so external traffic actually reaches your Mesh. It also provides an example script to run some curl in a loop.&lt;/p>
&lt;/div></description></item><item><title>GitOps - Argo CD</title><link>https://blog.stderr.at/openshift/2020-08-06-argocd/</link><pubDate>Thu, 06 Aug 2020 00:00:00 +0000</pubDate><guid>https://blog.stderr.at/openshift/2020-08-06-argocd/</guid><description>&lt;div class="paragraph">
&lt;p>&lt;a href="https://argoproj.github.io/argo-cd/">Argo CD&lt;/a> &lt;em>is a declarative, GitOps continuous delivery tool for Kubernetes. GitOps itself uses Git pull request to manager infrastructure and application configuration.&lt;/em>&lt;/p>
&lt;/div></description></item><item><title>Ingress with custom domain</title><link>https://blog.stderr.at/service-mesh/2020/03/ingress-with-custom-domain/</link><pubDate>Tue, 31 Mar 2020 00:00:00 +0000</pubDate><guid>https://blog.stderr.at/service-mesh/2020/03/ingress-with-custom-domain/</guid><description>&lt;div class="admonitionblock warning">
&lt;table>
&lt;tbody>&lt;tr>
&lt;td class="icon">
&lt;i class="fa icon-warning" title="Warning">&lt;/i>
&lt;/td>
&lt;td class="content">
Since Service Mesh 1.1, there is a better way to achieve the following. Especially the manual creation of the route is not required anymore. Check the following article to &lt;a href="https://blog.stderr.at/service-mesh/2020/05/enable-automatic-route-creation">Enable Automatic Route Creation&lt;/a>.
&lt;/td>
&lt;/tr>
&lt;/tbody>&lt;/table>
&lt;/div>
&lt;div class="paragraph">
&lt;p>Often the question is how to get traffic into the Service Mesh when using a custom domains. Part 4 our our tutorials series &lt;strong>OpenShift 4 and Service Mesh&lt;/strong> will use a dummy domain &lt;strong>&amp;#34;hello-world.com&amp;#34;&lt;/strong> and explains the required settings which must be done.&lt;/p>
&lt;/div></description></item><item><title>Thanos Querier vs Thanos Querier</title><link>https://blog.stderr.at/openshift/2020-12-10-thanos-vs-thanos/</link><pubDate>Thu, 10 Dec 2020 00:00:00 +0000</pubDate><guid>https://blog.stderr.at/openshift/2020-12-10-thanos-vs-thanos/</guid><description>&lt;div class="paragraph">
&lt;p>OpenShift comes per default with a static Grafana dashboard, which will present cluster metrics to cluster administrators. It is not possible to customize this Grafana instance.&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>However, many customers would like to create their own dashboards, their own monitoring and their own alerting while leveraging the possibilities of OpenShift at the same time and without installing a completely separated monitoring stack.&lt;/p>
&lt;/div></description></item><item><title>Routing Example</title><link>https://blog.stderr.at/service-mesh/2020/04/routing-example/</link><pubDate>Wed, 01 Apr 2020 00:00:00 +0000</pubDate><guid>https://blog.stderr.at/service-mesh/2020/04/routing-example/</guid><description>&lt;div class="paragraph">
&lt;p>In part 5 of the &lt;strong>OpenShift 4 and Service Mesh&lt;/strong> tutorials, basic routing, using the objects VirtualService and DesitnationRule, are described. All operations have been successfully tested on OpenShift 4.3.&lt;/p>
&lt;/div></description></item><item><title>Writing Operator using Ansible</title><link>https://blog.stderr.at/openshift/2021-01-27-writingoperatoransible/</link><pubDate>Wed, 27 Jan 2021 00:00:00 +0000</pubDate><guid>https://blog.stderr.at/openshift/2021-01-27-writingoperatoransible/</guid><description>&lt;div class="paragraph">
&lt;p>This quick post shall explain, without any fancy details, how to write an Operator based on Ansible. It is assumed that you know what purpose an Operator has.&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>As a short summary: Operators are a way to create custom controllers in OpenShift or Kubernetes. It watches for custom resource objects and creates the application based on the parameters in such custom resource object.
Often written in &lt;strong>Go&lt;/strong>, the SDK supports &lt;strong>Ansible&lt;/strong>, &lt;strong>Helm&lt;/strong> and (new) &lt;strong>Java&lt;/strong> as well.&lt;/p>
&lt;/div></description></item><item><title>Advanced Routing Example</title><link>https://blog.stderr.at/service-mesh/2020/04/advanced-routing-example/</link><pubDate>Fri, 03 Apr 2020 00:00:00 +0000</pubDate><guid>https://blog.stderr.at/service-mesh/2020/04/advanced-routing-example/</guid><description>&lt;div class="paragraph">
&lt;p>Welcome to part 6 of &lt;strong>OpenShift 4 and Service Mesh&lt;/strong> Advanced routing, like Canary Deployments, traffic mirroring and loadbalancing are discussed and tested. All operations have been successdully tested on OpenShift 4.3.&lt;/p>
&lt;/div></description></item><item><title>Understanding RWO block device handling in OpenShift</title><link>https://blog.stderr.at/openshift/2021-02-27-understanding-block-devices/</link><pubDate>Sat, 27 Feb 2021 00:00:00 +0000</pubDate><guid>https://blog.stderr.at/openshift/2021-02-27-understanding-block-devices/</guid><description>&lt;div class="paragraph">
&lt;p>In this blog post we would like to explore OpenShift / Kubernetes
block device handling. We try to answer the following questions:&lt;/p>
&lt;/div>
&lt;div class="ulist">
&lt;ul>
&lt;li>
&lt;p>What happens if multiple pods try to access the same block device?&lt;/p>
&lt;/li>
&lt;li>
&lt;p>What happens if we scale a deployment using block devices to more than one replica?&lt;/p>
&lt;/li>
&lt;/ul>
&lt;/div></description></item><item><title>Limit Egress/External Traffic</title><link>https://blog.stderr.at/service-mesh/2020/04/limit-egress/external-traffic/</link><pubDate>Mon, 06 Apr 2020 00:00:00 +0000</pubDate><guid>https://blog.stderr.at/service-mesh/2020/04/limit-egress/external-traffic/</guid><description>&lt;div class="paragraph">
&lt;p>Sometimes services are only available from outside the OpenShift cluster (like external API) which must be reached. Part 7 of &lt;strong>OpenShift 4 and Service Mesh&lt;/strong> takes care and explains how to control the egress or external traffic. All operations have been successdully tested on OpenShift 4.3.&lt;/p>
&lt;/div></description></item></channel></rss>