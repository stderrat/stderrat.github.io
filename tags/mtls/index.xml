<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>mTLS on TechBlog about OpenShift/Ansible/Satellite and much more</title><link>https://blog.stderr.at/tags/mtls/</link><description>Recent content in mTLS on TechBlog about OpenShift/Ansible/Satellite and much more</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Toni Schmidbauer &amp; Thomas Jungbauer</copyright><lastBuildDate>Wed, 08 Apr 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.stderr.at/tags/mtls/index.xml" rel="self" type="application/rss+xml"/><item><title>Mutual TLS Authentication</title><link>https://blog.stderr.at/service-mesh/2020/04/mutual-tls-authentication/</link><pubDate>Wed, 08 Apr 2020 00:00:00 +0000</pubDate><guid>https://blog.stderr.at/service-mesh/2020/04/mutual-tls-authentication/</guid><description>&lt;div class="paragraph">
&lt;p>When more and more microservices are involved in an application, more and more traffic is sent on the network. It should be considered to secure this traffic, to prevent the possibility to inject malicious packets. Mutual TLS/mTLS authentication or two-way authentication offers a way to encrypt service traffic with certificates.&lt;/p>
&lt;/div>
&lt;div class="paragraph">
&lt;p>With Red Hat OpenShift Service Mesh, Mutual TLS can be used without the microservice knowing that it is happening. The TLS is managed completely by the Service Mesh Operator between two Envoy proxies using a defined mTLS policy.&lt;/p>
&lt;/div></description></item></channel></rss>